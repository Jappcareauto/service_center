name: Build and Deploy Service Center Docker Image to AWS EC2

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev-env

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: |
          if [ "${{ steps.detect-package-manager.outputs.manager }}" == "yarn" ]; then
            yarn build
          else
            npm run build
          fi

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg API_URL=${{ secrets.API_URL }} \
            --build-arg NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} \
            --build-arg NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} \
            -t ${{ secrets.DOCKER_USERNAME }}/service-center:dev .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/service-center:dev

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Pull Docker Image
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/service-center:dev

      - name: Delete Old Docker Container
        run: sudo docker rm -f service-center || true

      - name: Run Docker Container
        run: |
          sudo docker run -d \
            -e API_URL=${{ secrets.API_URL }} \
            -e NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} \
            -e NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} \
            -p 3002:3000 --name service-center \
            ${{ secrets.DOCKER_USERNAME }}/service-center:dev
